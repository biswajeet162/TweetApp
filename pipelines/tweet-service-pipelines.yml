trigger:
  branches:
    include:
      - main  # Trigger on changes to the master branch

pool:
  name: 'MyAgent'

variables:
  dockerRegistryServiceConnection: 'biswaDockerRegistryConnection'  # Replace with your actual service connection name

stages:
  - stage: Build
    displayName: Build Auth Service
    jobs:
      - job: BuildAuthService
        displayName: Build Auth Service
        steps:
          # Step 1: Checkout code
          - checkout: self
            displayName: Checkout Code

          # Step 2: Set up JDK manually
          - script: |
              echo "Setting up Java 17..."
              set JAVA_HOME=C:\Program Files\Java\jdk-17
              set PATH=%JAVA_HOME%\bin;%PATH%
              echo JAVA_HOME: %JAVA_HOME%
              echo PATH: %PATH%
              java -version
            displayName: Set up Java 17

          # Step 3: Verify Maven setup
          - script: |
              echo "Checking Maven setup..."
              mvn -version
              echo PATH: %PATH%
            displayName: Verify Maven Setup

          # Step 4: Build the application with Maven
          - script: |
              echo "Building the application..."
              echo Current Directory: %cd%
              cd "$(Build.SourcesDirectory)\tweeter-authentication-service"
              echo Now in Directory: %cd%
              mvn clean package -DskipTests
            displayName: Build Spring Boot Application

  - stage: InstallDocker
    displayName: Install Docker CLI
    jobs:
      - job: InstallDockerCLI
        displayName: Install Docker CLI on Agent
        steps:
          - script: |
              echo "Installing Docker CLI..--------------------------------------------------."
              docker --version
            displayName: Install Docker CLI (if not already installed)

  - stage: Dockerize
    displayName: Build Docker Image
    dependsOn: Build
    jobs:
      - job: BuildDockerImage
        displayName: Build Docker Image
        steps:
          # Ensure Docker is installed before running Docker commands
          - script: |
              echo "Checking Docker installation..."
              docker --version
            displayName: Verify Docker Installation

          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: 'tweeter-authentication-service'
              command: 'build'
              Dockerfile: '$(Build.SourcesDirectory)/tweeter-authentication-service/Dockerfile'
              tags: |
                latest
                $(Build.BuildId)

  - stage: PushDockerImage
    displayName: Push Docker Image
    dependsOn: Dockerize
    jobs:
      - job: PushDocker
        displayName: Push Docker Image
        steps:
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: 'tweeter-authentication-service'
              command: 'push'
              tags: |
                latest
                $(Build.BuildId)





























# trigger:
#   branches:
#     include:
#       - master  # Trigger on changes to the master branch

# pool:
#   name: 'MyAgent'

# variables:
#   dockerRegistryServiceConnection: 'biswaDockerRegistryConnection'  # Replace with your actual service connection name


# stages:
#   - stage: Build
#     displayName: Build Auth Service
#     jobs:
#       - job: BuildAuthService
#         displayName: Build Auth Service
#         steps:
#           # Step 1: Checkout code
#           - checkout: self
#             displayName: Checkout Code

#           # Step 2: Set up JDK manually
#           - script: |
#               echo "Setting up Java 17..."
#               set JAVA_HOME=C:\Program Files\Java\jdk-17
#               set PATH=%JAVA_HOME%\bin;%PATH%
#               echo JAVA_HOME: %JAVA_HOME%
#               echo PATH: %PATH%
#               java -version
#             displayName: Set up Java 17

#           # Step 3: Verify Maven setup
#           - script: |
#               echo "Checking Maven setup..."
#               mvn -version
#               echo PATH: %PATH%
#             displayName: Verify Maven Setup

#           # Step 4: Build the application with Maven
#           - script: |
#               echo "Building the application..."
#               echo Current Directory: %cd%
#               cd "$(Build.SourcesDirectory)\tweeter-authentication-service"
#               echo Now in Directory: %cd%
#               mvn clean package -DskipTests
#             displayName: Build Spring Boot Application

#   - stage: Dockerize
#     displayName: Build Docker Image
#     dependsOn: Build
#     jobs:
#       - job: BuildDockerImage
#         displayName: Build Docker Image
#         steps:
#           - task: Docker@2
#             displayName: Build Docker Image
#             inputs:
#               containerRegistry: $(dockerRegistryServiceConnection)
#               repository: 'tweeter-authentication-service'
#               command: 'build'
#               Dockerfile: '$(Build.SourcesDirectory)/tweeter-authentication-service/Dockerfile'
#               tags: |
#                 latest
#                 $(Build.BuildId)

#   - stage: PushDockerImage
#     displayName: Push Docker Image
#     dependsOn: Dockerize
#     jobs:
#       - job: PushDocker
#         displayName: Push Docker Image
#         steps:
#           - task: Docker@2
#             displayName: Push Docker Image
#             inputs:
#               containerRegistry: $(dockerRegistryServiceConnection)
#               repository: 'tweeter-authentication-service'
#               command: 'push'
#               tags: |
#                 latest
#                 $(Build.BuildId)




# trigger:
#   branches:
#     include:
#       - master  # Trigger on changes to the main branch

# pool:
#   name: 'MyAgent'

# stages:
#   - stage: Build
#     displayName: Build Auth Service
#     jobs:
#       - job: BuildAuthService
#         displayName: Build Auth Service
#         steps:
#           # Step 1: Checkout code
#           - task: Checkout@1
#             displayName: Checkout Code

#           # Step 2: Set up JDK
#           - task: UseJavaVersion@1
#             inputs:
#               version: '17'  # Use Java 11 (adjust as per your project's requirements)
#               architecture: 'x64'

#           # Step 3: Build the Auth Service using Maven
#           - script: |
#               cd ..
#               cd tweeter-authentication-service
#               mvn clean install
#             displayName: Build with Maven

          # # Step 4: Build Docker image (Optional, if Docker is used)
          # - task: Docker@2
          #   displayName: Build Docker Image
          #   inputs:
          #     command: build
          #     Dockerfile: auth-service/Dockerfile
          #     tags: |
          #       auth-service:$(Build.BuildId)
